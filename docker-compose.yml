version: '3.8'

services:
  redis:
    image: redis:latest
    restart: always
    volumes:
      - ./redis/data:/data
    command: ["redis-server", "--save 60 1",  "--loglevel warning"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - news_ai_network

  accessor_service:
    build: ./accessor_service
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
    networks:
      - news_ai_network

  accessor_service-dapr:
    image: "daprio/daprd:edge"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: [
      "./daprd",
      "--app-id", "accessor_service",
      "--app-port", "5000",
      "--dapr-http-port", "3500",
      "--dapr-grpc-port", "50001",
      "--components-path", "/components"
    ]
    volumes:
      - "./components:/components"
    depends_on:
      - accessor_service
    network_mode: "service:accessor_service"

  news_service:
    build: ./news_service
    ports:
      - "5001:5001"
    env_file:
      - ./news_service/.env
    depends_on:
      - db
    networks:
      - news_ai_network

  news_service-dapr:
    image: "daprio/daprd:edge"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: [
      "./daprd",
      "--app-id", "news_service",
      "--app-port", "5001",
      "--dapr-http-port", "3501",
      "--dapr-grpc-port", "50002",
      "--components-path", "/components"
    ]
    volumes:
      - "./components:/components"
    depends_on:
      - news_service
    network_mode: "service:news_service"

  email_service:
    build: ./email_service
    ports:
      - "5002:5002"
    env_file:
      - ./email_service/.env
    depends_on:
      - rabbitmq
    networks:
      - news_ai_network

  email_service-dapr:
    image: "daprio/daprd:edge"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: [
      "./daprd",
      "--app-id", "email_service",
      "--app-port", "5002",
      "--dapr-http-port", "3502",
      "--dapr-grpc-port", "50003",
      "--components-path", "/components"
    ]
    volumes:
      - "./components:/components"
    depends_on:
      - email_service
    network_mode: "service:email_service"

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - news_ai_network

  db:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./news_service/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - news_ai_network
      
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4000:80"

volumes:
  mongo-data:

networks:
  news_ai_network:
    driver: bridge